{
  "name": "grunt-bump-build-git",
  "version": "1.1.1",
  "title": "grunt bump build git",
  "description": "Bump the version, build the project and add, commit and tag in git in one step.",
  "keywords": [
    "grunt",
    "gruntplugin",
    "bump",
    "build",
    "git"
  ],
  "homepage": "https://github.com/blueimp/grunt-bump-build-git",
  "author": {
    "name": "Sebastian Tschan",
    "url": "https://blueimp.net/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/blueimp/grunt-bump-build-git.git"
  },
  "bugs": {
    "url": "https://github.com/blueimp/grunt-bump-build-git/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt": "~0.4.2",
    "grunt-contrib-jshint": "~0.8.0",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-nodeunit": "~0.2.2",
    "grunt-contrib-copy": "~0.5.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.2"
  },
  "dependencies": {
    "semver": "~2.2.1",
    "shelljs": "~0.2.6"
  },
  "readme": "# grunt bump build git\n\n> Bump the version, build the project and add, commit and tag in git in one step.\n\n## Table of contents\n\n- [Getting Started](#getting-started)\n- [The build task](#the-build-task)\n\t- [Overview](#overview)\n\t- [Usage Examples](#usage-examples)\n\t\t- [Setup](#setup)\n\t\t- [Build test](#build-test)\n\t\t- [Releases](#releases)\n\t\t- [Git integration](#git-integration)\n\t- [Options](#options)\n\t\t- [build.tasks](#buildtasks)\n\t\t- [build.packageConfig](#buildpackageconfig)\n\t\t- [build.packages](#buildpackages)\n\t\t- [build.jsonSpace](#buildjsonspace)\n\t\t- [build.jsonReplacer](#buildjsonreplacer)\n- [Contributing](#contributing)\n- [Release History](#release-history)\n\n## Getting Started\nThis plugin requires Grunt `~0.4.2`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-bump-build-git --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-bump-build-git');\n```\n\n## The build task\n\n### Overview\nThis task allows you to bump your project version, update all available package files (`package.json`, `bower.json`, etc.), build the project with your custom tasks and the updated package confg version and add, commit and tag the new release in git - all in one step.\n\n### Usage Examples\n\n#### Setup\nThis task doesn't require any configuration setup, but allows to set custom options the following way:\n\nIn your project's Gruntfile, add a section named `build` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  build: {\n    tasks: ['default'],\n    packageConfig: 'pkg',\n    packages: '*.json',\n    jsonSpace: 2,\n    jsonReplacer: undefined,\n    gitAdd: '--all'\n  },\n})\n```\n\n#### Build test\nBuild the project and create a new meta version (e.g. 1.2.3+build.1382987826059):\n\n```sh\ngrunt build\n```\n\n#### Releases\nBuild the project and bump the major version (major.minor.patch):\n\n```sh\ngrunt build:major\n```\n\nBuild the project and bump the minor version (major.minor.patch):\n\n```sh\ngrunt build:minor\n```\n\nBuild the project and bump the patch version (major.minor.patch):\n\n```sh\ngrunt build:patch\n```\n\nBuild the project and bump the version to a major/minor/patch prerelease:\n\n```sh\ngrunt build:major-rc.1\n```\n\nBuild the project and bump the prerelease version (major.minor.patch-prerelease):\n\n```sh\ngrunt build:pre\n```\n\nBuild the project with a specific [semver](http://semver.org/) identifier as version:\n\n```sh\ngrunt build:1.2.3-rc.4+test.5\n```\n\n#### Git integration\nBuild the project and run `git add`, `git commit` and `git tag` automatically:\n\n```sh\ngrunt build:patch:\"Fixed #42\"\n```\n\nThis adds all unstaged files and commits the changes with the given message to the Git repository.  \nThe message is also used to create an annotated tag with the updated package version as tag name.  \n\nTo build and commit a test version without creating a tag, run the following command:\n\n```sh\ngrunt build::\"Test build\"\n```\n\n**Colons in commit messages:**\n\nIf you want to use colons in commit messages, escape them with a backslash:\n\n```sh\ngrunt build:minor:\"Set visibility\\:true by default.\"\n```\n\n### Options\n\n#### build.tasks\nType: `Array`  \nDefault value: `['default']`\n\nThe list of custom tasks to run after bumping the package version and before running the git tasks.\n\n#### build.packageConfig\nType: `String`  \nDefault value: `'pkg'`\n\nThe name of the config object with the package version.\n\n#### build.packages\nType: `String`  \nDefault value: `'*.json'`\n\nThe location of the JSON package files, passed as parameter to [grunt.file.expand](http://gruntjs.com/api/grunt.file#grunt.file.expand).\n\n#### build.jsonSpace\nType: `Integer`  \nDefault value: `2`\n\nThe `space` parameter to [JSON.stringify](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) used to render the JSON package files.\n\n#### build.jsonReplacer\nType: `function|Array`  \nDefault value: `undefined`\n\nThe `replacer` parameter to [JSON.stringify](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) used to render the JSON package files.\n\n#### build.gitAdd\nType: `String|Boolean`  \nDefault value: `'--all'`\n\nThe shell parameters passed to [git add](https://www.kernel.org/pub/software/scm/git/docs/git-add.html).  \nSet to `false` to disable calling `git add` on build runs.\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n\n * 2013-12-27   v1.1.1   Escape colons in git commit messages.\n * 2013-11-28   v1.1.0   Added `gitAdd` build option.\n * 2013-10-29   v1.0.0   Initial release.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-bump-build-git@1.1.1",
  "_from": "grunt-bump-build-git@"
}
